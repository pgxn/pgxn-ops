#!/bin/bash

set -e

PATH="/home/pgxn_manager/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
export PERL5LIB="{{ app.deploy_dir }}/lib/perl5"
export TMPDIR=$HOME/tmp

cd {{ app.deploy_dir }}

start() {
    if check_running {{ app.opt.mgr_pid }}; then
        echo "pgxn_manager is already running"
    else
        starman \
            -E prod \
            --workers {{ app.opt.workers }} \
            --preload-app \
            --max-requests {{ app.opt.maxreq }} \
            --listen {{ app.opt.listen }} \
            --daemonize \
            --pid {{ app.opt.mgr_pid }} \
            --error-log {{ app.opt.mgr_log }} \
            bin/pgxn_manager.psgi
    fi
    if check_running {{ app.opt.cmr_pid }}; then
        echo "pgxn_consumer is already running"
    else
        env PGPORT=5433 bin/pgxn_consumer \
            -E prod \
            --interval {{ app.opt.interval }} \
            --daemonize \
            --verbose --verbose \
            --pid {{ app.opt.cmr_pid }} \
            --log-file {{ app.opt.cmr_log }}
    fi
}

stop() {
    if check_running {{ app.opt.mgr_pid }}; then
        kill $(getpid {{ app.opt.mgr_pid }})
    else
        echo "pgxn_manager is not running"
    fi
    if check_running {{ app.opt.cmr_pid }}; then
        kill $(getpid {{ app.opt.cmr_pid }})
    else
        echo "pgxn_consumer is not running"
    fi
}

restart() {
    if check_running {{ app.opt.mgr_pid }}; then
        kill $(getpid {{ app.opt.mgr_pid }})
    else
        echo "pgxn_manager is not running; skipping stop"
    fi
    if check_running {{ app.opt.cmr_pid }}; then
        kill $(getpid {{ app.opt.cmr_pid }})
    else
        echo "pgxn_consumer is not running; skipping stop"
    fi
    sleep 5
    start
}

getpid() {
    echo $(cat $1)
}

check_running() {
    [ -s $1 ] && kill -0 $(getpid $1) >/dev/null 2>&1
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart}"
        exit 1
esac
exit $?
