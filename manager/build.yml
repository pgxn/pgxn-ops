---
- name: Build PGXN Manager
  hosts: main
  tags: [build]
  tasks:
    - name: Include Variables
      ansible.builtin.include_vars:
        file: vars.yml
        name: app
    - name: Create Directories
      ansible.builtin.file:
        path: "{{ item.dir }}"
        state: directory
        mode: "{{ item.mode }}"
      loop:
        - dir: "{{ app.release_dir }}"
          mode: "u=rwx,g=rx,o=rx"
        - dir: "{{ app.release_dir }}/logs"
          mode: "u=rwx,g=rwx,o="
        - dir: "{{ app.work_dir }}"
          mode: "u=rwx,g=rx,o=rx"
    - name: Download and Unpack
      # creates: "{{ app.dist_name }}-{{ app.version }}"
      ansible.builtin.unarchive:
        src: https://github.com/pgxn/pgxn-manager/releases/download/{{ app.version }}/{{ app.dist_name }}-{{ app.version }}.tar.gz
        dest: "{{ app.work_dir }}"
        mode: u+rw
        remote_src: true
    - name: Build {{ [app.dist_name, app.version] | join('-') }}
      ansible.builtin.command:
        creates: Build
        chdir: "{{ app.work_dir }}/{{ app.dist_name }}-{{ app.version }}"
        # creates: "{{ app.release_dir }}/{{ app.name }}-{{ app.version }}"
        cmd: >
          cpanm
          --with-recommends
          --notest
          --local-lib-contained {{ app.release_dir }}/{{ app.name }}-{{ app.version }}
          .
          Cookie::Baker::XS
          WWW::Form::UrlEncoded::XS
    - name: Copy the Asset Directories
      loop: [www, doc]
      ansible.builtin.copy:
        remote_src: true
        src: "{{ app.work_dir }}/{{ app.dist_name }}-{{ app.version }}/{{ item }}"
        dest: "{{ app.release_dir }}/{{ app.name }}-{{ app.version }}/"
        mode: "u=rwx,g=rx,o=rx"
    - name: Configure {{ [app.dist_name, app.version] | join('-') }}
      ansible.builtin.template:
        # Password stored in 1Password as “PGXN Manager Secrets”
        src: prod.json.j2
        dest: "{{ app.work_dir }}/{{ app.dist_name }}-{{ app.version }}/conf/prod.json"
        owner: pgxn
        group: pgxn
        mode: "u=rw,g=r,o="
    - name: Update the PGXN Database
      register: result
      changed_when: result.rc == 0
      ansible.builtin.shell:
        chdir: "{{ app.work_dir }}/{{ app.dist_name }}-{{ app.version }}"
        cmd: |
          set -e
          cpanm --notest --local-lib local Module::Build::DB
          perl -I local/lib/perl5 Build.PL --db_super_user {{ db.superuser }} --context prod
          ./Build db
    - name: Create the config directory
      ansible.builtin.file:
        path: "{{ app.release_dir }}/{{ app.name }}-{{ app.version }}/conf"
        state: directory
        mode: "u=rwx,g=rx,o=rx"
    - name: Link {{ [app.name, app.version] | join('-') }}
      ansible.builtin.file:
        state: link
        src: "{{ app.release_dir }}/{{ item.src }}"
        dest: "{{ app.release_dir }}/{{ app.name }}-{{ app.version }}/{{ item.dst }}"
        force: true
      loop:
        - { src: "logs", dst: logs }
